###
# #%L
# WebMotion plugin netbeans
# 
# $Id$
# $HeadURL$
# %%
# Copyright (C) 2012 Debux
# %%
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Lesser General Public License as 
# published by the Free Software Foundation, either version 3 of the 
# License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Lesser Public License for more details.
# 
# You should have received a copy of the GNU General Lesser Public 
# License along with this program.  If not, see
# <http://www.gnu.org/licenses/lgpl-3.0.html>.
# #L%
###
OpenIDE-Module-Display-Category=Java Web and EE
OpenIDE-Module-Long-Description=\
    <b>WebMotion</b> is a web java framework. \
    It is based on the Servlet 3 API of the Java EE 6 standard. \
    The main functionality consists in assuring the presentation layer with pages or templates. \
    The framework is based on a mapping file which enables to define actions based on events, such as launching a Java action according to a URL.\n\n\
    <br/><br/>\n\nFeatures :\n<ul>\n    <li>Mapping file type detection</li>\n    <li>Mapping file colorization</li>\n    <li>Mapping file completion</li>\n    <li>Mapping file hints</li>\n    <li>Mapping file error parsing</li>\n    <li>Templates to create a controller, a filter or a mapping file</li>\n    <li>Rename in mapping file</li>\n</ul>
OpenIDE-Module-Name=WebMotion plugin
OpenIDE-Module-Short-Description=Plugin to develop with WebMotion framework
resolver_name=WebMotion files
editor_name=WebMotion
font_name=FontAndColors.xml
editor_view_name=Source
mapping_template_name=Mapping file
controller_template_name=Java controller
filter_template_name=Java filter

section=Section
keyword=Keyword
comment=Comment
character=Character
variable=Variable
literal=Literal

completion_[config]=The WebMotion configuration
completion_[properties]=The web application configuration
completion_[actions]=The actions linked to the application URLs
completion_[filters]=The application filters
completion_[errors]=The actions linked to the errors (technical and/or applicative)
completion_[extensions]=The extensions used by the application
completion_package.views=The package.views property enables to define the path of all the JSP, HTML, etc. pages. 
completion_package.base=The package.base property enables to define the default Java package of all the application Java classes (controllers, filters, etc.). 
completion_package.actions=The package.actions property enables to define the default package of classes of the application controllers.
completion_package.filters=The package.filters property enables to define the default package of the classes of the application filters.
completion_package.errors=The property package.errors enables to define the default package of the classes for the Java errors.
completion_javac.debug=The javac.debug property enables to define if the application must be compiled in debug mode.
completion_server.async=The server.async property enables to set all the actions in the asynchronous mode.
completion_server.encoding=The server.encoding property enables to force the encoding used to read the parameters of the HTTP request and to write the HTTP response.
completion_server.error.page=The server.error.page property enables to specify if the error page provided by WebMotion is available.
completion_server.controller.scope=The server.controller.scope property enables to specify if the application is in stateful or stateless mode.
completion_server.listener.class=The server.listener.class property enables to define a listener on the start and stop of the server.
completion_server.main.handler.class=The server.main.handler.class enables to define the class responsible for the action linking inside WebMotion.
completion_server.secret=The server.secret enables you to define the secret key which enables the securisation of the data (cookies, ...).
completion_server.static.autodetect=In its classical functioning, WebMotion automatically detects the resources considered as static. If you wish that your application handles the rendering of some resources considered as static, you will need to deactivate this automatic detection.
completion_*=Catch all possibilities
completion_GET=HTTP method GET
completion_POST=HTTP method POST
completion_PUT=HTTP method PUT
completion_DELETE=HTTP method DELETE
completion_HEAD=HTTP method HEAD
completion_/=Begin the expression
completion_action\:=Map a URL with a Java action (controller method)
completion_async\:=Map a URL with an asynchronous action (controller method)
completion_sync\:=Map a URL with a synchronous action
completion_view\:=Map a URL with a view
completion_url\:=Map a redirection on an URL
completion_redirect\:=Map a redirection on an URL
completion_forward\:=Map a forward on an URL
completion_code\:=Map a HTTP status code
completion_400=Bad Request
completion_401=Unauthorized
completion_403=Forbidden
completion_404=Not Found
completion_408=Request Timeout
completion_500=Internal Server Error
completion_/*=Catch all url
